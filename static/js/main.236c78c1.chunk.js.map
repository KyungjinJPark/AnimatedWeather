{"version":3,"sources":["theme/themes.js","theme/global.js","bodymovins/ColdLottie.jsx","bodymovins/HotLottie.jsx","MainDisplay.jsx","WeekDisplay.jsx","Dashboard.jsx","ContentLoader.jsx","index.js"],"names":["dayTheme","bgCol","textCol","btnHoverCol","temperatureCol","nightTheme","GlobalStyles","createGlobalStyle","theme","ColdLottie","options","loop","animationData","height","width","HotLottie","MainDisplay","passStyle","dayData","inc","dec","AnimatedRow","animated","Row","className","style","Col","xs","onClick","temperature","name","toUpperCase","temperatureUnit","shortForecast","windSpeed","PeriodDisplay","periodData","index","setIndex","useState","pressed","setPressed","buttonProps","useSpring","transform","config","mass","tension","friction","div","onMouseDown","onMouseLeave","WeekDisplay","weekData","length","hideScrollbars","map","i","Dashboard","weatherData","setTheme","useEffect","toLowerCase","includes","incIndex","old","Object","keys","mainTransitions","useTransition","from","opacity","enter","leave","values","item","slice","WEATHER_API","axios","create","baseURL","ContentLoader","usrCoords","setUsrCoords","setWeatherData","getUserLat","console","log","get","params","then","pointResp","forecastURL","data","properties","forecast","split","forecastResp","periods","catch","error","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","err","id","Container","position","Loading","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.236c78c1.chunk.js","sourcesContent":["export const dayTheme = {\r\n  bgCol: \"#EFEFEF\",\r\n  textCol: \"#363537\",\r\n  btnHoverCol: \"#CCC\",\r\n  temperatureCol: \"purple\",\r\n  // toggleBorder: \"#FFF\",\r\n  // gradient: \"linear-gradient(#39598A, #79D7ED)\",\r\n}\r\n\r\nexport const nightTheme = {\r\n  bgCol: \"#363537\",\r\n  textCol: \"#FAFAFA\",\r\n  btnHoverCol: \"#252525\",\r\n  temperatureCol: \"orange\",\r\n  // toggleBorder: \"#6B8096\",\r\n  // gradient: \"linear-gradient(#091236, #1E215D)\",\r\n}","// Source: https://github.com/maximakymenko/react-day-night-toggle-app/blob/master/src/global.js#L23-L41\r\n\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  #main {\r\n    background: ${({ theme }) => theme.bgCol};\r\n    color: ${({ theme }) => theme.textCol};\r\n    transition: all 0.2s linear;\r\n  }\r\n  \r\n  .clickable:hover {\r\n    background-color: ${({ theme }) => theme.btnHoverCol};\r\n  }\r\n  \r\n  .main-temperature {\r\n    color: ${({ theme }) => theme.temperatureCol};\r\n  }\r\n`;","// Source: https://www.digitalocean.com/community/tutorials/how-to-add-animations-to-react-apps-with-react-lottie\r\n\r\nimport React from 'react'\r\nimport Lottie from 'react-lottie'\r\nimport animationData from './coldAnim.json'\r\n\r\nconst ColdLottie = () => {\r\n  const options = {\r\n    loop: false,\r\n    animationData: animationData\r\n  };\r\n\r\n  return (\r\n    <Lottie\r\n      options={options}\r\n      height={\"15em\"}\r\n      width={\"15em\"}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ColdLottie;","// Source: https://www.digitalocean.com/community/tutorials/how-to-add-animations-to-react-apps-with-react-lottie\r\n\r\nimport React from 'react'\r\nimport Lottie from 'react-lottie'\r\nimport animationData from './hotAnim.json'\r\n\r\nconst HotLottie = () => {\r\n  const options = {\r\n    loop: false,\r\n    animationData: animationData\r\n  };\r\n\r\n  return (\r\n    <Lottie\r\n      options={options}\r\n      height={\"15em\"}\r\n      width={\"15em\"}\r\n    />\r\n  )\r\n}\r\n\r\nexport default HotLottie;","import React, { useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { animated } from \"react-spring\";\r\nimport ColdLottie from \"./bodymovins/ColdLottie\";\r\nimport HotLottie from \"./bodymovins/HotLottie\";\r\n\r\nconst MainDisplay = ({ passStyle, dayData, inc, dec }) => {\r\n  const AnimatedRow = animated(Row);\r\n\r\n  return <AnimatedRow className=\"upper-display\" style={passStyle}>\r\n    <Col xs={2} className=\"change-button clickable\" onClick={dec}>\r\n      <p>{\"<<<\"}</p>\r\n    </Col>\r\n    <Col xs={8} className=\"main-wrapper\">\r\n      {dayData.temperature > 60 ? <HotLottie /> : <ColdLottie />}\r\n      <p className=\"main-title\">{dayData.name.toUpperCase()}</p>\r\n      <p className=\"main-temperature\">{dayData.temperature}&deg;{dayData.temperatureUnit}</p>\r\n      <p className=\"main-description\">{dayData.shortForecast}</p>\r\n      <p className=\"main-wind-speed\">{dayData.windSpeed + \" winds\"}</p>\r\n    </Col>\r\n    <Col xs={2} className=\"change-button clickable\" onClick={inc}>\r\n      <p>{\">>>\"}</p>\r\n    </Col>\r\n  </AnimatedRow >\r\n}\r\n\r\nexport default MainDisplay;","import React, { useState } from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport ScrollContainer from \"react-indiana-drag-scroll\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst WeekDisplay = ({ weekData, index, setIndex }) => {\r\n  if (index < 2) {\r\n    index = 2;\r\n  }\r\n  else if (index > weekData.length - 3) {\r\n    index = weekData.length - 3;\r\n  }\r\n\r\n  return <Row className=\"lower-display\">\r\n    <ScrollContainer className=\"week-wrapper\" hideScrollbars={false}>\r\n      {weekData.map((periodData, i) =>\r\n        <PeriodDisplay key={i} periodData={periodData} index={i} setIndex={setIndex} />\r\n      )}\r\n    </ScrollContainer>\r\n  </Row>\r\n}\r\n\r\nconst PeriodDisplay = ({ periodData, index, setIndex }) => {\r\n  const [pressed, setPressed] = useState(false);\r\n  const buttonProps = useSpring({\r\n    transform: pressed ? \"scale(0.95)\" : \"scale(1)\",\r\n    config: {\r\n      mass: 0.25,\r\n      tension: 500,\r\n      friction: 15,\r\n    }\r\n  });\r\n\r\n  return <animated.div\r\n    className=\"period-wrapper clickable\"\r\n    onMouseDown={() => setPressed(true)}\r\n    onMouseLeave={() => setPressed(false)}\r\n    onClick={() => {\r\n      setIndex(index);\r\n      setPressed(false);\r\n    }}\r\n    style={buttonProps}>\r\n    <p className=\"period-title\">{periodData.name.toUpperCase()}</p>\r\n    <p className=\"period-temperature\">{periodData.temperature}&deg;{periodData.temperatureUnit}</p>\r\n  </animated.div>\r\n}\r\n\r\nexport default WeekDisplay;","import React, { useState, useEffect } from \"react\";\r\nimport { useTransition } from \"react-spring\";\r\n\r\nimport \"./stylesheet.css\";\r\nimport MainDisplay from \"./MainDisplay\";\r\nimport WeekDisplay from \"./WeekDisplay\";\r\n\r\nconst Dashboard = ({ weatherData, setTheme }) => {\r\n  const [index, setIndex] = useState(0);\r\n  useEffect(() => {\r\n    if (weatherData[index].name.toLowerCase().includes(\"night\")) {\r\n      setTheme(\"night\");\r\n    }\r\n    else {\r\n      setTheme(\"day\");\r\n    }\r\n  }, [index]);\r\n  const incIndex = (inc) => {\r\n    setIndex(old => {\r\n      if (0 <= old + inc && old + inc < Object.keys(weatherData).length) {\r\n        old += inc;\r\n      }\r\n      return old;\r\n    });\r\n  }\r\n\r\n  const mainTransitions = useTransition(weatherData[index], {\r\n    from: { opacity: 0, transform: \"scale(1.1)\" },\r\n    enter: { opacity: 1, transform: \"scale(1)\" },\r\n    leave: { opacity: 0, transform: \"scale(0.9)\" },\r\n  });\r\n\r\n  return <div className=\"dashboard\">\r\n    {mainTransitions((values, item) =>\r\n      <MainDisplay\r\n        passStyle={values}\r\n        dayData={item}\r\n        inc={() => incIndex(1)}\r\n        dec={() => incIndex(-1)}\r\n      />)}\r\n    <WeekDisplay weekData={weatherData.slice(0)} index={index} setIndex={setIndex} />\r\n  </div>\r\n}\r\n\r\nexport default Dashboard;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { dayTheme, nightTheme } from \"./theme/themes\";\r\nimport { GlobalStyles } from \"./theme/global\"\r\n\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nconst WEATHER_API = axios.create({\r\n  baseURL: `https://api.weather.gov/`,\r\n});\r\n\r\nconst ContentLoader = () => {\r\n  const [usrCoords, setUsrCoords] = useState([false, -1, -1]); //containsValidValues, Latitude, Longitude\r\n  const [weatherData, setWeatherData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUserLat(); //async state set\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (usrCoords[0]) {\r\n      console.log(\"GET request sent\");\r\n      WEATHER_API.get(`points/${usrCoords[1]},${usrCoords[2]}`, { params: {} })\r\n        .then((pointResp) => {\r\n          let forecastURL = pointResp.data.properties.forecast;\r\n          console.log(forecastURL);\r\n          WEATHER_API.get(forecastURL.split(\".gov/\")[1])\r\n            .then((forecastResp) => {\r\n              setWeatherData(forecastResp.data.properties.periods);\r\n            })\r\n            .catch((error) => {\r\n              //TODO: something in case of error\r\n              console.log(error);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          //TODO: something in case of error\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [usrCoords[0]]);\r\n\r\n  const getUserLat = () => {\r\n    /**\r\n     * Working geolocation in javascript\r\n     * https://www.pluralsight.com/guides/how-to-use-geolocation-call-in-reactjs\r\n     */\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((pos) => {\r\n        console.log(\"USER data\");\r\n        setUsrCoords([true, pos.coords.latitude, pos.coords.longitude]);\r\n        console.log(\"async fulfilled\");\r\n      }, (err) => {\r\n        //TODO: something in case of error\r\n        console.log(\"location services not available\");\r\n      });\r\n    } else {\r\n      console.log(\"DEFAULT data\");\r\n      // default location: Washington, DC\r\n      setUsrCoords([true, 38.8892, -77.0506]);\r\n    }\r\n  }\r\n\r\n  // https://css-tricks.com/a-dark-mode-toggle-with-react-and-themeprovider/\r\n  const [theme, setTheme] = useState(\"day\");\r\n\r\n  return (\r\n    <ThemeProvider theme={theme == \"day\" ? dayTheme : nightTheme}>\r\n      <>\r\n        <GlobalStyles />\r\n        {/* <button onClick={toggleTheme}>Toggle Theme</button> */}\r\n        <div id=\"main\">\r\n          {weatherData[0]\r\n            ? <Container style={{\r\n              position: \"relative\",\r\n              height: \"100%\",\r\n            }}>\r\n              <Dashboard weatherData={weatherData} setTheme={setTheme} />\r\n            </Container>\r\n            : <Loading />}\r\n        </div>\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ContentLoader;\r\n\r\nconst Loading = () => <>{\"Loading...\"}</>;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport ContentLoader from \"./ContentLoader\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContentLoader />\r\n  </React.StrictMode>\r\n  , document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}